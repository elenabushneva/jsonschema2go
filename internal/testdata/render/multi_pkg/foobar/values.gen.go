// Code generated by jsonschema2go. DO NOT EDIT.
package foobar

import (
	"encoding/json"
	"fmt"
	"github.com/jwilner/jsonschema2go/boxed"
)

type Blob struct {
	Count boxed.Int64 `json:"count"`
}

func (m *Blob) Validate() error {
	return nil
}

func (m *Blob) MarshalJSON() ([]byte, error) {
	inner := struct {
		Count *int64 `json:"count,omitempty"`
	}{}
	if m.Count.Set {
		inner.Count = &m.Count.Int64
	}
	return json.Marshal(inner)
}

type validationError struct {
	errType, jsonField, field, message string
}

func (e *validationError) ErrType() string {
	return e.errType
}

func (e *validationError) JSONField() string {
	return e.jsonField
}

func (e *validationError) Field() string {
	return e.field
}

func (e *validationError) Message() string {
	return e.message
}

func (e *validationError) Error() string {
	return fmt.Sprintf("%v: %v", e.field, e.message)
}
