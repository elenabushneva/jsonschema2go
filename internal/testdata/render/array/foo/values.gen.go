// Code generated by jsonschema2go. DO NOT EDIT.
package foo

import (
	"encoding/json"
	"fmt"
)

// Bar gives you some dumb info
type Bar struct {
	Name *string `json:"name,omitempty"`
}

func (m *Bar) Validate() error {
	return nil
}

// Barz gives you lots of dumb info
type Barz []Bar

func (m Barz) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte(`[]`), nil
	}
	return json.Marshal([]Bar(m))
}

func (m Barz) Validate() error {
	for i := range m {
		if err := m[i].Validate(); err != nil {
			return err
		}
	}
	return nil
}

type validationError struct {
	errType, jsonField, field, message string
}

func (e *validationError) ErrType() string {
	return e.errType
}

func (e *validationError) JSONField() string {
	return e.jsonField
}

func (e *validationError) Field() string {
	return e.field
}

func (e *validationError) Message() string {
	return e.message
}

func (e *validationError) Error() string {
	return fmt.Sprintf("%v: %v", e.field, e.message)
}
